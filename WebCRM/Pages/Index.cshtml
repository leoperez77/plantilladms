@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}



<form method="get">
   

    <div class="content">
        <div class="container-fluid">
          
                <div class="row">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-header card-header-tabs card-header-rose">
                                <div class="nav-tabs-navigation">
                                    <div class="nav-tabs-wrapper">
                                        <span class="nav-tabs-title">Hoy</span>
                                        <ul class="nav nav-tabs" data-tabs="tabs">
                                            <li class="nav-item">
                                                <a class="nav-link active" href="#messages" data-toggle="tab">
                                                    <i class="material-icons">graphic_eq</i> Prospectos
                                                    <div class="ripple-container"></div>
                                                </a>

                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="#futuras" data-toggle="tab">
                                                    <i class="material-icons">schedule</i>Futuras
                                                    <div class="ripple-container"></div>
                                                </a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="#profile" data-toggle="tab">
                                                    <i class="material-icons">calendar_today</i>Agenda
                                                    <div class="ripple-container"></div>
                                                </a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="#testdrive" data-toggle="tab">
                                                    <i class="material-icons">directions_car</i>Test Drive
                                                    <div class="ripple-container"></div>
                                                </a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="#settings" data-toggle="tab">
                                                    <i class="material-icons">cloud</i> Downloads
                                                    <div class="ripple-container"></div>
                                                    <div class="ripple-container"></div>
                                                </a>
                                            </li>

                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="tab-pane active" id="messages">
                                        <div class="container-fluid">
                                            <div class="collapse" id="filtroCollapse">
                                                



                                                <div class="row">
                                                    <div class="col-12 text-center">
                                                        <button id="enviar" type="submit" class="btn btn-primary btn-sm">Realizar filtro</button>
                                                    </div>
                                                </div>

                                            </div>

                                        </div>
                                      
                                    </div>
                                    
                                    
                                    <div class="tab-pane" id="profile">
                                        <div class="card card-calendar">
                                            <div class="card-body ">
                                                <div id="fullCalendar"></div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="tab-pane" id="settings">
                                       
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                      

                </div>

            }


            <div class="row">
                <div class="col-md-10 ml-auto mr-auto">

                </div>
            </div>
        </div>
    </div>
</form>

@section Styles {
    <link href="~/Transacciones/flaticon.css" rel="stylesheet" type="text/css">
}

@section Scripts {
    @{await Html.RenderPartialAsync("_GridActions");}
    <script src='~/assets/js/plugins/es.js'></script>

    <script src="~/lib/pdfobject/pdfobject.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('#tableAsesores').DataTable();

            $('#table_ejecuciones').DataTable();
            $('#table_futuras').DataTable();

            var getAPI = $("input#UrlApi").val();
            var userId = $("input#idUsuario").val();
            $calendar = $('#fullCalendar');
            today = new Date();
            y = today.getFullYear();
            m = today.getMonth();
            d = today.getDate();
            $calendar.fullCalendar({
                plugins: ['interaction', 'dayGrid', 'timeGrid'],
                viewRender: function (view, element) {
                    if (view.name != 'month') {
                        $(element).find('.fc-scroller').perfectScrollbar();
                    }
                },
                header: {
                    left: 'title',
                    center: 'month,agendaWeek,agendaDay',
                    right: 'prev,next,today'
                },
                defaultDate: today,
                selectable: true,
                selectHelper: true,
                views: {
                    month: { titleFormat: 'MMMM YYYY' },
                    week: { titleFormat: " MMMM D YYYY" },
                    day: { titleFormat: 'D MMM, YYYY' }
                },
                editable: false,
                eventLimit: true,
                events: getAPI + 'agenda/' + userId
            });


            $('.datepicker').datetimepicker({
                format: 'YYYY/MM/DD',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });

            $('button#putUserStatusBtn').click(function (event) {
                event.preventDefault();
                var idUsuario = $("input#idUsuario").val();
                var idEstado = $("#InfoUsuario_IdEstado").val();

                var dataEstado = {
                    "idUsuario": parseInt(idUsuario),
                    "idEvento": parseInt(idEstado),
                    "idActualiza": parseInt(idUsuario)
                };

                $.ajax({
                    processing: 'true',
                    async: true,
                    crossDomain: true,
                    url: getAPI + 'Estados',
                    type: "POST",
                    dataType: "json",
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify(dataEstado),
                    beforeSend: function () {
                        $("#putUserStatusBtn").attr("disabled", true);
                    },
                    success: function (data) {
                        $("#putUserStatusBtn").attr("disabled", false);
                        $("#putUserStatusBtn").removeAttr("disabled");
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        $("#putUserStatusBtn").attr("disabled", false);
                        $("#putUserStatusBtn").removeAttr("disabled");
                    },
                });
            });


            $("a.pdfReportButton").on('click', function (event) {
                event.preventDefault();
                var $thishref = $(this).data("ref").trim();
                Swal.fire({
                    width: 800,
                    customClass: 'swal-height',
                    html: '<br><div id="customReport"></div>',
                    showCloseButton: true,
                    showConfirmButton: false,
                    showCancelButton: false,
                    footer: '<small>Por favor espere que el contenido cargue, completamente.</small>',
                    onOpen: () => {
                        PDFObject.embed($thishref, "#customReport");
                    },
                });

            });

            $("a.notifyButton").on('click', function (event) {
                event.preventDefault();


                Swal.fire({
                    title: 'Notificación TestDrive',
                    text: "Seguro de enviar ?",
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si'
                }).then((result) => {
                    if (result.value) {
                        var $id = parseInt($(this).data("ref"));

                        var settings = {
                            "url": getAPI + "NotificacionTestDrive?id=" + $id,
                            "method": "GET",
                            "timeout": 0,
                        };

                        $.ajax(settings).done(function (response) {
                            swal.fire({
                                title: "Notificación enviada!",
                                buttonsStyling: false,
                                confirmButtonClass: "btn btn-success"
                            });


                        });
                    }
                })



            });
        });





    </script>
}


    <style>
        .swal-height {
            height: 120vh;
            border: 1rem solid rgba(0,0,0,.1);
        }

        .custom-content {
            height: 120vh;
            border: 1rem solid rgba(0,0,0,.1);
        }

        .pdfobject-container {
            height: 50rem;
            border: 1rem solid rgba(0,0,0,.1);
        }
    </style>

